strG:string = "word ";
str4:string;

main:function integer () =
{
	int:integer;
	str1:string = "\0";
	c:char;
	s:string;
	str2:string = "e";
	str3:string = "f";

	str1 = strG = str4 = "this is my string literal!";

	print str1, "\n", str2, "\n", str3, "\n", str4, "\n", strG;

}

/*
.arch armv8-a
.file   "output.s"

.data
        .global strG
        .align 8
strG:   .string "word "
.data
        .global str4
        .align 8
str4:   .string "\0"
.text
        .global main
        main:
                stp     x29, x30, [sp, #-112]!
                adrp    x9, .LSLIT1
                add     x9, x9, :lo12:.LSLIT1
                adrp    x10, str4
                add     x10, x10, :lo12:str4
                ldrb    w0, [x9, 0]
                strb    w0, [x10, 0]
                ldrb    w0, [x9, 1]
                strb    w0, [x10, 1]
                ldrb    w0, [x9, 2]
                strb    w0, [x10, 2]
                ldrb    w0, [x9, 3]
                strb    w0, [x10, 3]
                ldrb    w0, [x9, 4]
                strb    w0, [x10, 4]
                ldrb    w0, [x9, 5]
                strb    w0, [x10, 5]
                ldrb    w0, [x9, 6]
                strb    w0, [x10, 6]
                ldrb    w0, [x9, 7]
                strb    w0, [x10, 7]
                ldrb    w0, [x9, 8]
                strb    w0, [x10, 8]
                ldrb    w0, [x9, 9]
                strb    w0, [x10, 9]
                ldrb    w0, [x9, 10]
                strb    w0, [x10, 10]
                ldrb    w0, [x9, 11]
                strb    w0, [x10, 11]
                ldrb    w0, [x9, 12]
                strb    w0, [x10, 12]
                ldrb    w0, [x9, 13]
                strb    w0, [x10, 13]
                ldrb    w0, [x9, 14]
                strb    w0, [x10, 14]
                ldrb    w0, [x9, 15]
                strb    w0, [x10, 15]
                ldrb    w0, [x9, 16]
                strb    w0, [x10, 16]
                ldrb    w0, [x9, 17]
                strb    w0, [x10, 17]
                ldrb    w0, [x9, 18]
                strb    w0, [x10, 18]
                ldrb    w0, [x9, 19]
                strb    w0, [x10, 19]
                ldrb    w0, [x9, 20]
                strb    w0, [x10, 20]
                ldrb    w0, [x9, 21]
                strb    w0, [x10, 21]
                ldrb    w0, [x9, 22]
                strb    w0, [x10, 22]
                ldrb    w0, [x9, 23]
                strb    w0, [x10, 23]
                ldrb    w0, [x9, 24]
                strb    w0, [x10, 24]
                ldrb    w0, [x9, 25]
                strb    w0, [x10, 25]
                ldrb    w0, [x9, 26]
                strb    w0, [x10, 26]
                ldrb    w0, [x9, 27]
                strb    w0, [x10, 27]
                ldrb    w0, [x9, 28]
                strb    w0, [x10, 28]
                mov     w0, 0
                strb    w0, [x10, 29]
                adrp    x9, str4
                add     x9, x9, :lo12:str4
                adrp    x10, strG
                add     x10, x10, :lo12:strG
                ldrb    w0, [x9, 0]
                strb    w0, [x10, 0]
                ldrb    w0, [x9, 1]
                strb    w0, [x10, 1]
                ldrb    w0, [x9, 2]
                strb    w0, [x10, 2]
                ldrb    w0, [x9, 3]
                strb    w0, [x10, 3]
                ldrb    w0, [x9, 4]
                strb    w0, [x10, 4]
                ldrb    w0, [x9, 5]
                strb    w0, [x10, 5]
                ldrb    w0, [x9, 6]
                strb    w0, [x10, 6]
                ldrb    w0, [x9, 7]
                strb    w0, [x10, 7]
                ldrb    w0, [x9, 8]
                strb    w0, [x10, 8]
                ldrb    w0, [x9, 9]
                strb    w0, [x10, 9]
                ldrb    w0, [x9, 10]
                strb    w0, [x10, 10]
                ldrb    w0, [x9, 11]
                strb    w0, [x10, 11]
                ldrb    w0, [x9, 12]
                strb    w0, [x10, 12]
                ldrb    w0, [x9, 13]
                strb    w0, [x10, 13]
                ldrb    w0, [x9, 14]
                strb    w0, [x10, 14]
                ldrb    w0, [x9, 15]
                strb    w0, [x10, 15]
                ldrb    w0, [x9, 16]
                strb    w0, [x10, 16]
                ldrb    w0, [x9, 17]
                strb    w0, [x10, 17]
                ldrb    w0, [x9, 18]
                strb    w0, [x10, 18]
                ldrb    w0, [x9, 19]
                strb    w0, [x10, 19]
                ldrb    w0, [x9, 20]
                strb    w0, [x10, 20]
                ldrb    w0, [x9, 21]
                strb    w0, [x10, 21]
                ldrb    w0, [x9, 22]
                strb    w0, [x10, 22]
                ldrb    w0, [x9, 23]
                strb    w0, [x10, 23]
                ldrb    w0, [x9, 24]
                strb    w0, [x10, 24]
                ldrb    w0, [x9, 25]
                strb    w0, [x10, 25]
                ldrb    w0, [x9, 26]
                strb    w0, [x10, 26]
                ldrb    w0, [x9, 27]
                strb    w0, [x10, 27]
                ldrb    w0, [x9, 28]
                strb    w0, [x10, 28]
                mov     w0, 0
                strb    w0, [x10, 29]
                adrp    x9, strG
                add     x9, x9, :lo12:strG
                adrp    x10, .LSVAR1
                add     x10, x10, :lo12:.LSVAR1
                ldrb    w0, [x9, 0]
                strb    w0, [x10, 0]
                ldrb    w0, [x9, 1]
                strb    w0, [x10, 1]
                ldrb    w0, [x9, 2]
                strb    w0, [x10, 2]
                ldrb    w0, [x9, 3]
                strb    w0, [x10, 3]
                ldrb    w0, [x9, 4]
                strb    w0, [x10, 4]
                ldrb    w0, [x9, 5]
                strb    w0, [x10, 5]
                ldrb    w0, [x9, 6]
                strb    w0, [x10, 6]
                ldrb    w0, [x9, 7]
                strb    w0, [x10, 7]
                ldrb    w0, [x9, 8]
                strb    w0, [x10, 8]
                ldrb    w0, [x9, 9]
                strb    w0, [x10, 9]
                ldrb    w0, [x9, 10]
                strb    w0, [x10, 10]
                ldrb    w0, [x9, 11]
                strb    w0, [x10, 11]
                ldrb    w0, [x9, 12]
                strb    w0, [x10, 12]
                ldrb    w0, [x9, 13]
                strb    w0, [x10, 13]
                ldrb    w0, [x9, 14]
                strb    w0, [x10, 14]
                ldrb    w0, [x9, 15]
                strb    w0, [x10, 15]
                ldrb    w0, [x9, 16]
                strb    w0, [x10, 16]
                ldrb    w0, [x9, 17]
                strb    w0, [x10, 17]
                ldrb    w0, [x9, 18]
                strb    w0, [x10, 18]
                ldrb    w0, [x9, 19]
                strb    w0, [x10, 19]
                ldrb    w0, [x9, 20]
                strb    w0, [x10, 20]
                ldrb    w0, [x9, 21]
                strb    w0, [x10, 21]
                ldrb    w0, [x9, 22]
                strb    w0, [x10, 22]
                ldrb    w0, [x9, 23]
                strb    w0, [x10, 23]
                ldrb    w0, [x9, 24]
                strb    w0, [x10, 24]
                ldrb    w0, [x9, 25]
                strb    w0, [x10, 25]
                ldrb    w0, [x9, 26]
                strb    w0, [x10, 26]
                ldrb    w0, [x9, 27]
                strb    w0, [x10, 27]
                ldrb    w0, [x9, 28]
                strb    w0, [x10, 28]
                mov     w0, 0
                strb    w0, [x10, 29]
                adrp    x9, .LSVAR1
                add     x9, x9, :lo12:.LSVAR1
                mov     x0, x9
                bl      print_string
                adrp    x9, .LSLIT2
                add     x9, x9, :lo12:.LSLIT2
                mov     x0, x9
                bl      print_string
                adrp    x9, .LSVAR3
                add     x9, x9, :lo12:.LSVAR3
                mov     x0, x9
                bl      print_string
                adrp    x9, .LSLIT3
                add     x9, x9, :lo12:.LSLIT3
                mov     x0, x9
                bl      print_string
                adrp    x9, .LSVAR4
                add     x9, x9, :lo12:.LSVAR4
                mov     x0, x9
                bl      print_string
                adrp    x9, .LSLIT4
                add     x9, x9, :lo12:.LSLIT4
                mov     x0, x9
                bl      print_string
                adrp    x9, str4
                add     x9, x9, :lo12:str4
                mov     x0, x9
                bl      print_string
                adrp    x9, .LSLIT5
                add     x9, x9, :lo12:.LSLIT5
                mov     x0, x9
                bl      print_string
                adrp    x9, strG
                add     x9, x9, :lo12:strG
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #112
                ret
        .section        .data
        .align 8
.LSVAR1:
        .string "\0"
        .section        .data
        .align 8
.LSVAR2:
        .string "\0"
        .section        .data
        .align 8
.LSVAR3:
        .string "e"
        .section        .data
        .align 8
.LSVAR4:
        .string "f"
        .section        .rodata
        .align 8
.LSLIT1:
        .string "this is my string literal!"
        .section        .rodata
        .align 8
.LSLIT2:
        .string "\n"
        .section        .rodata
        .align 8
.LSLIT3:
        .string "\n"
        .section        .rodata
        .align 8
.LSLIT4:
        .string "\n"
        .section        .rodata
        .align 8
.LSLIT5:
        .string "\n"
*/