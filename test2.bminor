// testing print statements of multiple types both individually as well as on one line


str2 : string = "two ";
str4 : string = "four ";
str6 : string = "six ";

print0string : function void () = {
    print "empty\n";
}

print1string : function void (str1: string) = {
    print str1, "\n";
}

print2string : function void (str1: string, str2: string) = {
    print str1, str2, "\n";    
}

print3string : function void (str1: string, str2: string, str3: string) = {
    print str1, str2, str3, "\n";    
}

print4string : function void (str1: string, str2: string, str3: string, str4: string) = {
    print str1, str2, str3, str4, "\n";   
}

print5string : function void (str1: string, str2: string, str3: string, str4: string, str5: string) = {
    print str1, str2, str3, str4, str5, "\n";
}

print6string : function void (str1: string, str2: string, str3: string, str4: string, str5: string, str6: string) = {
    print str1, str2, str3, str4, str5, str6, "\n";
}

main : function integer (argc : integer, argv : array [] string) = {
    str1 : string = "one ";
    str3 : string = "three ";
    str5 : string = "five ";
    
    print0string();
    print1string(str1);
    print2string(str1, str2);
    print3string(str1, str2, str3);
    print4string(str1, str2, str3, str4);
    print5string(str1, str2, str3, str4, str5);
    print6string(str1, str2, str3, str4, str5, str6);

    return 0;
}

/*
.arch armv8-a
.file   "output.s"

.data
        .global str2
str2:   .string "two "
.data
        .global str4
str4:   .string "four "
.data
        .global str6
str6:   .string "six "
.text
        .global print0string
        print0string:
                stp     x29, x30, [sp, #-200]!
                adrp    x9, .LT1
                add     x9, x9, :lo12:.LT1
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.LT1:
        .string "empty\n"
.text
        .global print1string
        print1string:
                stp     x29, x30, [sp, #-200]!
                str     x0, [sp, 16]
                ldr     x9, [sp, 16]
                mov     x0, x9
                bl      print_string
                adrp    x9, .LT2
                add     x9, x9, :lo12:.LT2
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.LT2:
        .string "\n"
.text
        .global print2string
        print2string:
                stp     x29, x30, [sp, #-200]!
                str     x0, [sp, 16]
                str     x1, [sp, 24]
                ldr     x9, [sp, 16]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 24]
                mov     x0, x9
                bl      print_string
                adrp    x9, .LT3
                add     x9, x9, :lo12:.LT3
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.LT3:
        .string "\n"
.text
        .global print3string
        print3string:
                stp     x29, x30, [sp, #-200]!
                str     x0, [sp, 16]
                str     x1, [sp, 24]
                str     x2, [sp, 32]
                ldr     x9, [sp, 16]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 24]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 32]
                mov     x0, x9
                bl      print_string
                adrp    x9, .LT4
                add     x9, x9, :lo12:.LT4
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.LT4:
        .string "\n"
.text
        .global print4string
        print4string:
                stp     x29, x30, [sp, #-200]!
                str     x0, [sp, 16]
                str     x1, [sp, 24]
                str     x2, [sp, 32]
                str     x3, [sp, 40]
                ldr     x9, [sp, 16]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 24]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 32]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 40]
                mov     x0, x9
                bl      print_string
                adrp    x9, .LT5
                add     x9, x9, :lo12:.LT5
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.LT5:
        .string "\n"
.text
        .global print5string
        print5string:
                stp     x29, x30, [sp, #-200]!
                str     x0, [sp, 16]
                str     x1, [sp, 24]
                str     x2, [sp, 32]
                str     x3, [sp, 40]
                str     x4, [sp, 48]
                ldr     x9, [sp, 16]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 24]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 32]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 40]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 48]
                mov     x0, x9
                bl      print_string
                adrp    x9, .LT6
                add     x9, x9, :lo12:.LT6
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.LT6:
        .string "\n"
.text
        .global print6string
        print6string:
                stp     x29, x30, [sp, #-200]!
                str     x0, [sp, 16]
                str     x1, [sp, 24]
                str     x2, [sp, 32]
                str     x3, [sp, 40]
                str     x4, [sp, 48]
                str     x5, [sp, 56]
                ldr     x9, [sp, 16]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 24]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 32]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 40]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 48]
                mov     x0, x9
                bl      print_string
                ldr     x9, [sp, 56]
                mov     x0, x9
                bl      print_string
                adrp    x9, .LT7
                add     x9, x9, :lo12:.LT7
                mov     x0, x9
                bl      print_string
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.LT7:
        .string "\n"
.text
        .global main
        main:
                stp     x29, x30, [sp, #-200]!
                str     x0, [sp, 16]
                str     x1, [sp, 24]
                bl      print0string
                adrp    x9, .L2
                add     x9, x9, :lo12:.L2
                mov     x0, x9
                bl      print1string
                mov     x9, x0
                adrp    x9, .L2
                add     x9, x9, :lo12:.L2
                mov     x0, x9
                adrp    x9, str2
                add     x9, x9, :lo12:str2
                mov     x1, x9
                bl      print2string
                mov     x9, x0
                adrp    x9, .L2
                add     x9, x9, :lo12:.L2
                mov     x0, x9
                adrp    x9, str2
                add     x9, x9, :lo12:str2
                mov     x1, x9
                adrp    x9, .L3
                add     x9, x9, :lo12:.L3
                mov     x2, x9
                bl      print3string
                mov     x9, x0
                adrp    x9, .L2
                add     x9, x9, :lo12:.L2
                mov     x0, x9
                adrp    x9, str2
                add     x9, x9, :lo12:str2
                mov     x1, x9
                adrp    x9, .L3
                add     x9, x9, :lo12:.L3
                mov     x2, x9
                adrp    x9, str4
                add     x9, x9, :lo12:str4
                mov     x3, x9
                bl      print4string
                mov     x9, x0
                adrp    x9, .L2
                add     x9, x9, :lo12:.L2
                mov     x0, x9
                adrp    x9, str2
                add     x9, x9, :lo12:str2
                mov     x1, x9
                adrp    x9, .L3
                add     x9, x9, :lo12:.L3
                mov     x2, x9
                adrp    x9, str4
                add     x9, x9, :lo12:str4
                mov     x3, x9
                adrp    x9, .L4
                add     x9, x9, :lo12:.L4
                mov     x4, x9
                bl      print5string
                mov     x9, x0
                adrp    x9, .L2
                add     x9, x9, :lo12:.L2
                mov     x0, x9
                adrp    x9, str2
                add     x9, x9, :lo12:str2
                mov     x1, x9
                adrp    x9, .L3
                add     x9, x9, :lo12:.L3
                mov     x2, x9
                adrp    x9, str4
                add     x9, x9, :lo12:str4
                mov     x3, x9
                adrp    x9, .L4
                add     x9, x9, :lo12:.L4
                mov     x4, x9
                adrp    x9, str6
                add     x9, x9, :lo12:str6
                mov     x5, x9
                bl      print6string
                mov     x9, x0
                mov     x9, #0
                mov     x0, x9
                ldp     x29, x30, [sp], #200
                ret
                ldp     x29, x30, [sp], #200
                ret
        .section        .rodata
.L2:
        .string "one "
        .section        .rodata
.L3:
        .string "three "
        .section        .rodata
.L4:
        .string "five "
*/