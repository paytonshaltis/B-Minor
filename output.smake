#	ARMv8-a assembly code generated by 
#	'B-Minor Compiler' v1.0,
#	written by:
#
#	PAYTON JAMES SHALTIS
#	COMPLETED MAY 4TH, 2021 for
#
#	CSC-425: "Compilers and Interpreters", 
#	Professor John DeGood, Spring 2021 at
#	The College of New Jersey

.arch armv8-a
.file "output.smake"

.text
	.global main
	main:
		stp	x29, x30, [sp, #-112]!
		str	x0, [sp, 16]
		str	x1, [sp, 24]
		mov	x9, 374
		neg	x9, x9
		str	x9, [sp, 32]
		str	x9, [sp, 64]
		str	x10, [sp, 72]
		str	x11, [sp, 80]
		str	x12, [sp, 88]
		str	x13, [sp, 96]
		str	x14, [sp, 104]
		str	x15, [sp, 112]
		adrp	x9, .LSLIT1
		add	x9, x9, :lo12:.LSLIT1
		mov	x0, x9
		ldr	x9, [sp, 32]
		mov	x1, x9
		adrp	x9, .LSVAR1
		add	x9, x9, :lo12:.LSVAR1
		mov	x2, x9
		bl	printf
		ldr	x9, [sp, 64]
		ldr	x10, [sp, 72]
		ldr	x11, [sp, 80]
		ldr	x12, [sp, 88]
		ldr	x13, [sp, 96]
		ldr	x14, [sp, 104]
		ldr	x15, [sp, 112]
		mov	x9, x0
		adrp	x9, .LSLIT2
		add	x9, x9, :lo12:.LSLIT2
		mov	x0, x9
		bl	print_string
		adrp	x9, .LSVAR2
		add	x9, x9, :lo12:.LSVAR2
		mov	x0, x9
		bl	print_string
		adrp	x9, .LSLIT3
		add	x9, x9, :lo12:.LSLIT3
		mov	x0, x9
		bl	print_string
		str	x9, [sp, 64]
		str	x10, [sp, 72]
		str	x11, [sp, 80]
		str	x12, [sp, 88]
		str	x13, [sp, 96]
		str	x14, [sp, 104]
		str	x15, [sp, 112]
		adrp	x9, .LSVAR2
		add	x9, x9, :lo12:.LSVAR2
		mov	x0, x9
		bl	atoi
		ldr	x9, [sp, 64]
		ldr	x10, [sp, 72]
		ldr	x11, [sp, 80]
		ldr	x12, [sp, 88]
		ldr	x13, [sp, 96]
		ldr	x14, [sp, 104]
		ldr	x15, [sp, 112]
		mov	x9, x0
		mov	x0, x9
		bl	print_integer
		adrp	x9, .LSLIT4
		add	x9, x9, :lo12:.LSLIT4
		mov	x0, x9
		bl	print_string
		mov	x9, 0
		mov	x0, x9
		ldp	x29, x30, [sp], #112
		ret
		adrp	x9, .LSLIT5
		add	x9, x9, :lo12:.LSLIT5
		mov	x0, x9
		bl	print_string
		str	x9, [sp, 64]
		str	x10, [sp, 72]
		str	x11, [sp, 80]
		str	x12, [sp, 88]
		str	x13, [sp, 96]
		str	x14, [sp, 104]
		str	x15, [sp, 112]
		adrp	x9, .LSVAR3
		add	x9, x9, :lo12:.LSVAR3
		mov	x0, x9
		bl	gets
		ldr	x9, [sp, 64]
		ldr	x10, [sp, 72]
		ldr	x11, [sp, 80]
		ldr	x12, [sp, 88]
		ldr	x13, [sp, 96]
		ldr	x14, [sp, 104]
		ldr	x15, [sp, 112]
		mov	x9, x0
		adrp	x9, .LSLIT6
		add	x9, x9, :lo12:.LSLIT6
		mov	x0, x9
		bl	print_string
		adrp	x9, .LSVAR3
		add	x9, x9, :lo12:.LSVAR3
		mov	x0, x9
		bl	print_string
		adrp	x9, .LSLIT7
		add	x9, x9, :lo12:.LSLIT7
		mov	x0, x9
		bl	print_string
		ldp	x29, x30, [sp], #112
		ret
	.section	.data
	.align 8
.LSVAR1:
	.string "Payton Shaltis"
	.section	.rodata
	.align 8
.LSLIT1:
	.string "My number is %i, and my name is %s!\n"
	.section	.data
	.align 8
.LSVAR2:
	.string "157"
	.section	.rodata
	.align 8
.LSLIT2:
	.string "Using the \'atio()\' function, string "
	.section	.rodata
	.align 8
.LSLIT3:
	.string " converts to "
	.section	.rodata
	.align 8
.LSLIT4:
	.string "\n"
	.section	.data
	.align 8
.LSVAR3:
	.string "\0"
	.section	.rodata
	.align 8
.LSLIT5:
	.string "Please enter your name:\n"
	.section	.rodata
	.align 8
.LSLIT6:
	.string "Got it! Your name is "
	.section	.rodata
	.align 8
.LSLIT7:
	.string "!\n"
