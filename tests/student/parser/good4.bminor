// testing the for-loop statements with several types of statements and expressions


main : function integer (argc : integer, argv : array[] string) = {
    i : integer = 0;
    j : integer = 0;

    for(i; i < 5; i++)                          // for-loop allows single statement
        return;

    for(j = 9; j >= i * 4; j--)                 // for-loop allows for nesting
        for(i = 3; i >= var; i = i/4)
            return;

    for(i = 3; i != 4; i++) {                   // for-loop with block statement      
        x : integer = x * 8;
        print "cat ", x, " mouse!"; 
    }

    for(i; i != j; i = j)                       // if-statement works in for-loop (unbalanced)
        if(x == 0)
            return false;
    
    for(i = -5; i < 0; i++++)                   // if-else-statement works in for-loop (balanced)
        if(x <= 3)
            return true;
        else
            return false;

    for(i = 0; i < 10; i++)                     // while-loop-statement works in for-loop
        for(;;)  
            print "cat";
            
    return 0;
}