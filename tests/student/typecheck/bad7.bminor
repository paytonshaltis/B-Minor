// testing bad array assignments of smaller arrays into multidimensional ones
// see typechecking and resolution errors in standard output for details


main : function integer (argc : integer, argv : array [] string) = {
    
    // creating some one-dimensional arrays
    arr1_1 : array [5] integer = { 10, 9, 8, 7, 6 };
    arr1_2 : array [3] string = { "these", "are", "strings" };
    arr1_3 : array [2] boolean = { true, false };

    // creating two-dimensional arrays that will be initialized with literals and above arrays
    arr2_1 : array [3] array [5] integer = { arr1_1, { 1, 2, 3, 4, 5 }, arr1_1 };
    arr2_2 : array [2] array [3] string = { arr1_2, arr2_1 };                                               // cannot initialize 2D array element with 2D array
    arr2_3 : array [3] array [2] boolean = { arr1_3, arr1_3, { true } };                                    // not enough elements in 1D array to be assigned to 2D array element

    // even higher-dimension arrays can be initialized with other arrays, both 1D and 2D
    arr3_1 : array [2] array [3] array [5] integer = { arr2_2, { arr1_1, { 1, 2, 3, 4, 5 }, arr1_1 } };     // incorrect 2D array type being used as an element in 3D array
                                                    // ------  -------------------------------------
                                                    // 2D arr | 2D arr constructed from 1D arrs

    return 0;
}