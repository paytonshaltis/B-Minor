// testing a complete program with most features of the language


/* global variables */
g_count : integer = 0;
g_name : array[6] char = { 'P', 'a', 'y', 't', 'o', 'n' };
g_letter : char;

/* function prototypes */
thisString : function void (s : string, n : integer);
accessArrayChar : function char (arr : array[] char, length : integer, pos : integer);

/* main functions with parameters */
main : function integer (argc : integer, argv : array[] string) = {
    // prints elements from the g_name array
    g_letter = g_name[0];
    print "This is ", g_letter, " ", g_name[1], ".\n";
    print "\"g_name\" array at index 3: ", accessArrayChar(g_name, 4, 3), ".\n";
    
    // prints a string multiple times
    thisString("Repeating string...\n", 7);

    // doubles g_count until it reaches 64
    g_count++;
    zeroVar : integer = 0;
    i : integer = zeroVar;
    for(i;;i++){
        g_count = g_count * 2;
        if(g_count >= 64) 
            return 0;
    }

    // should never reach this return statement
    return 0;
}

/* function implementation; prints string s n times */
thisString : function void (s : string, n : integer) = {
    i : integer = 0;
    for(i = 0; i < n; i++) {
        print s, "\n";
    }
    print "\n";
    return;
}

/* function implementation; returns the char at position pos in array arr */
accessArrayChar : function char (arr : array[] char, length : integer, pos : integer) = {
    if(pos > length - 1) {
        print "Invalid array index! Returning NULL terminator!\n";
        return '\0';
    }
    else {
        return arr[pos];
    }
}